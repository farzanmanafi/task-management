# docker-compose.dev.yml
version: '3.8'

services:
  app:
    build:
      context: .
      target: builder
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=taskmanager
      - DB_PASSWORD=password123
      - DB_DATABASE=taskmanagement_dev
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_ACCESS_SECRET=dev-jwt-secret
      - JWT_REFRESH_SECRET=dev-refresh-secret
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app
      - /app/node_modules
      - ./uploads:/app/uploads
    command: npm run start:dev
    networks:
      - app-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=taskmanagement_dev
      - POSTGRES_USER=taskmanager
      - POSTGRES_PASSWORD=password123
    ports:
      - '5432:5432'
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    ports:
      - '6379:6379'
    volumes:
      - redis_dev_data:/data
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@taskmanagement.com
      - PGADMIN_DEFAULT_PASSWORD=admin123
    ports:
      - '8080:80'
    depends_on:
      - postgres
    networks:
      - app-network

  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - '8081:8081'
    depends_on:
      - redis
    networks:
      - app-network

volumes:
  postgres_dev_data:
  redis_dev_data:

networks:
  app-network:
    driver: bridge
